/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";

const HELIX_SPEED = 6;

export function Flower(props) {
    const { nodes, materials } = useGLTF("./models/flower/model.glb");

    const helix = useRef();

    useFrame((_state, delta) => {
        helix.current.rotation.y += delta * HELIX_SPEED;
    });

    return (
        <group {...props} dispose={null}>
            <mesh receiveShadow ref={helix} geometry={nodes["Rose_Circle005-Mesh"].geometry} material={materials.F44336}>
                {/* <meshStandardMaterial color="white" /> */}
            </mesh>
            <mesh
                geometry={nodes["Rose_Circle005-Mesh_1"].geometry}
                material={materials["4CAF50"]}
                position={[1.09, 0.23, 0]}
                receiveShadow
            >
                {/* <meshStandardMaterial color="white" /> */}
            </mesh>
        </group>
    );
}

useGLTF.preload("./models/flower/model.glb");
